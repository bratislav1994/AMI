<UserControl x:Class="AMIClient.View.NetworkPreviewControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AMIClient"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local2="clr-namespace:AMIClient.View"
        xmlns:local3="clr-namespace:AMIClient.ViewModels"
        xmlns:vml="clr-namespace:AMIClient.VML"
        
        mc:Ignorable="d"
         >

    <UserControl.Resources>

        <DataTemplate DataType="{x:Type local3:ChartViewModel}">
            <local2:ChartControl />
        </DataTemplate>

        <DataTemplate DataType="{x:Type local3:DataGridViewModel}">
            <local2:DataGridControl />
        </DataTemplate>

    </UserControl.Resources>

    <Grid Margin="0,0,0,0" VerticalAlignment="Stretch" Height="auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" MinWidth="200"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <TreeView Grid.Column="0" ItemsSource="{Binding RootElements}" x:Name="tree" PreviewMouseRightButtonDown="tree_PreviewMouseRightButtonDown">

            <!--<TreeView.ContextMenu>
                <ContextMenu >
                    <MenuItem Header="Chart" />
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=DataContext.GroupAMIChartCommand}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </TreeView.ContextMenu>-->

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>


            <TreeView.Resources>

                <HierarchicalDataTemplate 
                                DataType="{x:Type local:RootElement}" 
                                ItemsSource="{Binding Children}">

                    <StackPanel Orientation="Horizontal" >
                        <TextBlock x:Name="t1" Text="{Binding Name}">

                            <TextBlock.ContextMenu>
                                <ContextMenu DataContext="{x:Reference Name=tree}">

                                    <MenuItem Header="Minute chart" 
                                                      Command="{Binding DataContext.GroupAmiChartMinCommand}"
                                                      CommandParameter="{Binding}"/>
                                    <MenuItem Header="Hour chart" 
                                                      Command="{Binding DataContext.GroupAmiChartHourCommand}"
                                                      CommandParameter="{Binding}"/>
                                    <MenuItem Header="Day chart" 
                                                      Command="{Binding DataContext.GroupAmiChartDayCommand}"
                                                      CommandParameter="{Binding}"/>

                                </ContextMenu>

                            </TextBlock.ContextMenu>

                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate 
                                DataType="{x:Type local:GeoRegionForTree}" 
                                ItemsSource="{Binding Children}">

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                            <TextBlock.ContextMenu>
                                <ContextMenu DataContext="{x:Reference Name=tree}">

                                    <MenuItem Header="Minute chart" 
                                                      Command="{Binding DataContext.GroupAmiChartMinCommand}"
                                                      CommandParameter="{Binding}"/>
                                    <MenuItem Header="Hour chart" 
                                                      Command="{Binding DataContext.GroupAmiChartHourCommand}"
                                                      CommandParameter="{Binding}"/>
                                    <MenuItem Header="Day chart" 
                                                      Command="{Binding DataContext.GroupAmiChartDayCommand}"
                                                      CommandParameter="{Binding}"/>

                                </ContextMenu>

                            </TextBlock.ContextMenu>

                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate 
                                DataType="{x:Type local:SubGeoRegionForTree}" 
                                ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                            <TextBlock.ContextMenu>
                                <ContextMenu DataContext="{x:Reference Name=tree}">

                                    <MenuItem Header="Minute chart" 
                                                      Command="{Binding DataContext.GroupAmiChartMinCommand}"
                                                      CommandParameter="{Binding}"/>
                                    <MenuItem Header="Hour chart" 
                                                      Command="{Binding DataContext.GroupAmiChartHourCommand}"
                                                      CommandParameter="{Binding}"/>
                                    <MenuItem Header="Day chart" 
                                                      Command="{Binding DataContext.GroupAmiChartDayCommand}"
                                                      CommandParameter="{Binding}"/>

                                </ContextMenu>

                            </TextBlock.ContextMenu>

                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>

                <DataTemplate 
                                DataType="{x:Type local:SubstationForTree}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                            <TextBlock.ContextMenu>
                                <ContextMenu DataContext="{x:Reference Name=tree}">

                                    <MenuItem Header="Minute chart" 
                                                      Command="{Binding DataContext.GroupAmiChartMinCommand}"
                                                      CommandParameter="{Binding}"/>
                                    <MenuItem Header="Hour chart" 
                                                      Command="{Binding DataContext.GroupAmiChartHourCommand}"
                                                      CommandParameter="{Binding}"/>
                                    <MenuItem Header="Day chart" 
                                                      Command="{Binding DataContext.GroupAmiChartDayCommand}"
                                                      CommandParameter="{Binding}"/>

                                </ContextMenu>

                            </TextBlock.ContextMenu>

                        </TextBlock>
                    </StackPanel>
                </DataTemplate>

            </TreeView.Resources>
        </TreeView>

        <Grid Grid.Column="1" Grid.ColumnSpan="2">
           
            
            <TabControl SelectedItem="{Binding SelectedTab}" Name="TabMain" ItemsSource="{Binding TabItems,UpdateSourceTrigger=PropertyChanged}" >
                <TabControl.ItemTemplate>
                    <DataTemplate >
                        <DockPanel >
                            
                            <TextBlock Text="{Binding Header}" Width="90" ToolTip="{Binding Header}" />
                            <Button Content="X" Visibility="{Binding Exit}" Cursor="Hand" Focusable="False"
            FontFamily="Courier" FontSize="12" FontWeight="Bold" Padding="0" 
             HorizontalAlignment="Right" Width="16" Height="14"  
                                    Command="{Binding DataContext.CloseTabCommand,RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                                    CommandParameter="{Binding }"/>
                        </DockPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>

                <TabControl.ContentTemplate>
                                    
                    <DataTemplate>
                        <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="auto" Width="auto" Content="{Binding Path=CurrentTab}"></ContentControl>
                    </DataTemplate>
                </TabControl.ContentTemplate>

                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="MinWidth" Value="100" />
                        <Setter Property="Width" Value="auto" />
                        <Setter Property="Height" Value="30" />
                    </Style>
                </TabControl.Resources>

            </TabControl>
        </Grid>

        
        
        <!--<DataGrid Visibility="{Binding DataGridVisibility}" Margin="0, 20, 0, 0" Grid.Column="1" Grid.ColumnSpan="2" SelectionMode="Single" GridLinesVisibility="None" ItemsSource="{Binding Model.Amis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" CanUserAddRows="false" AutoGenerateColumns="False" HeadersVisibility="Column" CanUserResizeRows="False" >


            <DataGrid.Resources>
                <ContextMenu x:Key="ticketContextMenu">
                    <ContextMenu.Items>
                        <MenuItem
                            Header="Chart"
                            Command="{Binding DataContext.IndividualAmiChartCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                            CommandParameter="{Binding DataContext.Ami.GlobalId, RelativeSource={RelativeSource Mode=Self}}"/>
                    </ContextMenu.Items>
                </ContextMenu>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Setter Property="ContextMenu" Value="{StaticResource ticketContextMenu}" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>

                <DataGridTextColumn MinWidth="100" Width="100" Header="mRID" Binding="{Binding Ami.Mrid}"/>
                <DataGridTextColumn MinWidth="100" Width="100" Header="Name" Binding="{Binding Ami.Name}"/>
                <DataGridTextColumn MinWidth="100" Width="100" Header="Subgeographical region ID" Binding="{Binding Ami.EqContainer}"/>
                <DataGridTextColumn MinWidth="100" Width="100" Header="Current P" Binding="{Binding CurrentP}"/>
                <DataGridTextColumn MinWidth="100" Width="100" Header="Current Q" Binding="{Binding CurrentQ}"/>
                <DataGridTextColumn MinWidth="100" Width="100" Header="Current V" Binding="{Binding CurrentV}"/>
                <DataGridTextColumn MinWidth="100" Width="*" Header="TimeStamp" Binding="{Binding TimeStamp, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}"/>

            </DataGrid.Columns>
        </DataGrid>-->
    </Grid>
</UserControl>
