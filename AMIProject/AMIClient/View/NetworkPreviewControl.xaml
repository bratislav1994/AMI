<UserControl x:Class="AMIClient.View.NetworkPreviewControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AMIClient"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local2="clr-namespace:AMIClient.View"
        xmlns:local3="clr-namespace:AMIClient.ViewModels"
        xmlns:vml="clr-namespace:AMIClient.VML"
        xmlns:vm="clr-namespace:AvalonDockMVVM.ViewModel"
        xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:dockctrl="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
        mc:Ignorable="d"
         >

    <UserControl.Resources>

        <DataTemplate DataType="{x:Type local3:ChartViewModel}">
            <local2:ChartControl />
        </DataTemplate>

        <DataTemplate DataType="{x:Type local3:DataGridViewModel}">
            <local2:DataGridControl />
        </DataTemplate>

        <DataTemplate DataType="{x:Type local3:AmiDataGridViewModel}">
            <local2:AmiDataGridControl />
        </DataTemplate>

    </UserControl.Resources>

    <Grid Margin="0,0,0,0" VerticalAlignment="Stretch" Height="auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Expander ExpandDirection="Right" Grid.Column="0"
				  HorizontalAlignment="Right" VerticalAlignment="Stretch">


            <Expander.Content>
                <TreeView Width="200" Grid.Column="0" ItemsSource="{Binding RootElements}" x:Name="tree">

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>

                        <HierarchicalDataTemplate 
                                DataType="{x:Type local:RootElement}" 
                                ItemsSource="{Binding Children}">

                            <StackPanel Orientation="Horizontal" >
                                <TextBlock x:Name="t1" Text="{Binding Name}">

                                </TextBlock>
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate 
                                DataType="{x:Type local:GeoRegionForTree}" 
                                ItemsSource="{Binding Children}">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                                </TextBlock>
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <DataTemplate 
                                DataType="{x:Type local:SubGeoRegionForTree}" 
                                >
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>

                    </TreeView.Resources>
                </TreeView>
            </Expander.Content>
        </Expander>

        <Grid Grid.Column="1" Grid.ColumnSpan="2">

            <dock:DockingManager Grid.Row="1"
                         DataContext="{Binding DockManagerViewModel}"
                         DocumentsSource="{Binding Documents}"
                         AnchorablesSource="{Binding Anchorables}" 
                         AllowMixedOrientation="True">

                <dock:DockingManager.Resources>

                    <!-- add views for specific ViewModels -->
                    <DataTemplate DataType="{x:Type local3:ChartViewModel}">
                        <local2:ChartControl />
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type local3:DataGridViewModel}">
                        <local2:DataGridControl />
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type local3:AmiDataGridViewModel}">
                        <local2:AmiDataGridControl />
                    </DataTemplate>

                    <!--<DataTemplate>
                        <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="auto" Width="auto" Content="{Binding Path=CurrentTab}"></ContentControl>
                    </DataTemplate>-->

                </dock:DockingManager.Resources>

                <dock:DockingManager.LayoutItemContainerStyle>
                    <!-- you can add additional bindings from the layoutitem to the DockWindowViewModel -->
                    <Style TargetType="{x:Type dockctrl:LayoutItem}" >
                        <Setter Property="Title" Value="{Binding Model.Title}" />
                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                    </Style>
                </dock:DockingManager.LayoutItemContainerStyle>

            </dock:DockingManager>
        </Grid>
    </Grid>
</UserControl>
