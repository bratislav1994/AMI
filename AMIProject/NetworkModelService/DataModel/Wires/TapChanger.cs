///////////////////////////////////////////////////////////
//  TapChanger.cs
//  Implementation of the Class TapChanger
//  Generated by Enterprise Architect
//  Created on:      20-Nov-2017 7:17:02 PM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Domain;
using TC57CIM.IEC61970.Core;
using TC57CIM.IEC61970.Wires;
namespace TC57CIM.IEC61970.Wires {
	/// <summary>
	/// Mechanism for changing transformer winding tap positions.
	/// </summary>
	public class TapChanger : PowerSystemResource {

		/// <summary>
		/// Highest possible tap step position, advance from neutral
		/// </summary>
		public TC57CIM.IEC61970.Domain.Integer highStep;
		/// <summary>
		/// Lowest possible tap step position, retard from neutral
		/// </summary>
		public TC57CIM.IEC61970.Domain.Integer lowStep;
		/// <summary>
		/// The neutral tap step position for this winding.
		/// </summary>
		public TC57CIM.IEC61970.Domain.Integer neutralStep;
		/// <summary>
		/// The tap step position used in "normal" network operation for this winding. For
		/// a "Fixed" tap changer indicates the current physical tap setting.
		/// </summary>
		public TC57CIM.IEC61970.Domain.Integer normalStep;
		/// <summary>
		/// The regulating control scheme in which this tap changer participates.
		/// </summary>
		public TC57CIM.IEC61970.Wires.TapChangerControl TapChangerControl;

		public TapChanger(){

		}

		~TapChanger(){

		}

	}//end TapChanger

}//end namespace Wires