///////////////////////////////////////////////////////////
//  Equipment.cs
//  Implementation of the Class Equipment
//  Generated by Enterprise Architect
//  Created on:      20-Nov-2017 7:16:39 PM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Core;
using FTN.Common;

namespace TC57CIM.IEC61970.Core {
	/// <summary>
	/// The parts of a power system that are physical devices, electronic or mechanical.
	/// 
	/// </summary>
	public class Equipment : PowerSystemResource {

        private long eqContainer = 0;

        public Equipment(long globalId) : base(globalId)
        {
        }

        public long EqContainer
        {
            get { return eqContainer; }
            set { eqContainer = value; }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if (base.Equals(obj))
            {
                Equipment x = (Equipment)obj;
                return (x.eqContainer == this.eqContainer);
            }
            else
            {
                return false;
            }
        }

        #region IAccess implementation

        public override bool HasProperty(ModelCode t)
        {
            switch (t)
            {
                case ModelCode.EQUIPMENT_EQCONTAINER:
                    return true;

                default:
                    return base.HasProperty(t);
            }
        }

        public override void GetProperty(Property property)
        {
            switch (property.Id)
            {
                case ModelCode.EQUIPMENT_EQCONTAINER:
                    property.SetValue(eqContainer);
                    break;

                default:
                    base.GetProperty(property);
                    break;
            }
        }

        public override void SetProperty(Property property)
        {
            switch (property.Id)
            {
                case ModelCode.EQUIPMENT_EQCONTAINER:
                    eqContainer = property.AsReference();
                    break;

                default:
                    base.SetProperty(property);
                    break;
            }
        }

        #endregion IAccess implementation

        #region IReference implementation

        public override void GetReferences(Dictionary<ModelCode, List<long>> references, TypeOfReference refType)
        {
            if (eqContainer != 0 && (refType == TypeOfReference.Reference || refType == TypeOfReference.Both))
            {
                references[ModelCode.EQUIPMENT_EQCONTAINER] = new List<long>();
                references[ModelCode.EQUIPMENT_EQCONTAINER].Add(eqContainer);
            }

            base.GetReferences(references, refType);
        }

        #endregion IReference implementation

    }//end Equipment

}//end namespace Core